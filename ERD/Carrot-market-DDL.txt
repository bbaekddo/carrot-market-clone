-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- Locations Table Create SQL
CREATE TABLE Locations
(
    `id`          BIGINT            NOT NULL    AUTO_INCREMENT COMMENT 'Location ID', 
    `address`     TEXT              NOT NULL    COMMENT 'Location Address', 
    `name`        VARCHAR(10)       NULL        COMMENT '''~~동'' 까지 표시', 
    `latitude`    DECIMAL(10, 7)    NOT NULL    COMMENT 'Latitude Degree', 
    `longtitude`  DECIMAL(10, 7)    NOT NULL    COMMENT 'Longtitude Degree', 
    `createDate`  TIMESTAMP         NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP         NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)       NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE Locations COMMENT 'API 위치 정보';


-- CategoryImages Table Create SQL
CREATE TABLE CategoryImages
(
    `id`          SMALLINT       NOT NULL    AUTO_INCREMENT COMMENT 'Category Image ID', 
    `data`        TEXT           NULL        DEFAULT NULL COMMENT 'Category Image URL', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE CategoryImages COMMENT '상품 카테고리 일러스트 사진';


-- UserLocations Table Create SQL
CREATE TABLE UserLocations
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'User Location ID', 
    `location`    BIGINT         NOT NULL    COMMENT 'Location ID', 
    `auth`        CHAR(1)        NOT NULL    DEFAULT 'N' COMMENT 'N : 미인증 / Y: 인증 완료', 
    `authCount`   INT            NOT NULL    DEFAULT 0 COMMENT 'Authentication Count', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE UserLocations COMMENT '사용자 위치 정보 및 인증 여부';

ALTER TABLE UserLocations
    ADD CONSTRAINT FK_UserLocations_location_Locations_id FOREIGN KEY (location)
        REFERENCES Locations (id) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- ProfileImages Table Create SQL
CREATE TABLE ProfileImages
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'Profile Image ID', 
    `data`        TEXT           NULL        DEFAULT NULL COMMENT 'Profile Image URL', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE ProfileImages COMMENT '사용자 프로필 사진';


-- Users Table Create SQL
CREATE TABLE Users
(
    `idx`                BIGINT           NOT NULL    AUTO_INCREMENT COMMENT 'User Index', 
    `id`                 VARCHAR(20)      NOT NULL    COMMENT 'User ID', 
    `password`           TEXT             NOT NULL    COMMENT 'User Password', 
    `name`               VARCHAR(10)      NOT NULL    COMMENT 'User Name', 
    `nickname`           VARCHAR(20)      NOT NULL    COMMENT 'User Nickname', 
    `profileImg`         BIGINT           NOT NULL    COMMENT 'Profile Image ID', 
    `mannerTemperature`  DECIMAL(3, 1)    NOT NULL    DEFAULT 36.5 COMMENT '0 ~ 99.9 Range', 
    `retradeRate`        TINYINT          NULL        DEFAULT NULL COMMENT 'Retrade Rate', 
    `replyRate`          TINYINT          NULL        DEFAULT NULL COMMENT 'Reply Rate', 
    `location1`          BIGINT           NOT NULL    COMMENT 'User Location 1', 
    `location2`          BIGINT           NOT NULL    COMMENT 'User Location 2', 
    `createDate`         TIMESTAMP        NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`         TIMESTAMP        NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`             VARCHAR(10)      NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (idx)
);

ALTER TABLE Users COMMENT '사용자 정보';

CREATE UNIQUE INDEX UQ_Users_1
    ON Users(id, nickname);

ALTER TABLE Users
    ADD CONSTRAINT FK_Users_profileImg_ProfileImages_id FOREIGN KEY (profileImg)
        REFERENCES ProfileImages (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE Users
    ADD CONSTRAINT FK_Users_location1_UserLocations_id FOREIGN KEY (location1)
        REFERENCES UserLocations (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE Users
    ADD CONSTRAINT FK_Users_location2_UserLocations_id FOREIGN KEY (location2)
        REFERENCES UserLocations (id) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- Expressions Table Create SQL
CREATE TABLE Expressions
(
    `id`          TINYINT        NOT NULL    AUTO_INCREMENT COMMENT 'Relate to Post ID', 
    `content`     VARCHAR(2)     NOT NULL    COMMENT 'Expression Data', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE Expressions COMMENT '동네 정보 글 공감하기';

CREATE UNIQUE INDEX UQ_Expressions_1
    ON Expressions(content);


-- Topics Table Create SQL
CREATE TABLE Topics
(
    `id`          TINYINT         NOT NULL    AUTO_INCREMENT COMMENT 'Post Topic ID', 
    `name`        VARCHAR(100)    NOT NULL    COMMENT 'Topic Name', 
    `createDate`  TIMESTAMP       NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP       NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)     NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE Topics COMMENT '동네 정보 글 주제';

CREATE UNIQUE INDEX UQ_Topics_1
    ON Topics(name);


-- BadgeImages Table Create SQL
CREATE TABLE BadgeImages
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'Badge Image ID', 
    `data`        TEXT           NULL        COMMENT 'Badge Image URL', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE BadgeImages COMMENT '배지 일러스트 사진';


-- Categoires Table Create SQL
CREATE TABLE Categoires
(
    `id`          TINYINT        NOT NULL    AUTO_INCREMENT COMMENT 'Item Category ID', 
    `name`        VARCHAR(20)    NOT NULL    COMMENT 'Category Name', 
    `image`       SMALLINT       NOT NULL    COMMENT 'Category Image ID', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE Categoires COMMENT '상품 카테고리';

CREATE UNIQUE INDEX UQ_Categoires_1
    ON Categoires(name);

ALTER TABLE Categoires
    ADD CONSTRAINT FK_Categoires_image_CategoryImages_id FOREIGN KEY (image)
        REFERENCES CategoryImages (id) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- UserMannerTypes Table Create SQL
CREATE TABLE UserMannerTypes
(
    `id`          SMALLINT       NOT NULL    AUTO_INCREMENT COMMENT 'Manner Type ID', 
    `content`     VARCHAR(30)    NOT NULL    COMMENT 'Manner Type Content', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE UserMannerTypes COMMENT '사용자 매너 후기 종류';

CREATE UNIQUE INDEX UQ_UserMannerTypes_1
    ON UserMannerTypes(content);


-- Items Table Create SQL
CREATE TABLE Items
(
    `id`           BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'Item ID', 
    `name`         VARCHAR(50)    NOT NULL    COMMENT 'Item Name', 
    `category`     TINYINT        NOT NULL    COMMENT 'Item Category', 
    `content`      TEXT           NOT NULL    COMMENT 'Item Description', 
    `price`        INT            NOT NULL    COMMENT 'KRW', 
    `location`     BIGINT         NOT NULL    COMMENT 'Sale Location', 
    `lookupCount`  SMALLINT       NOT NULL    DEFAULT 0 COMMENT 'Lookup Count', 
    `proposal`     CHAR(1)        NOT NULL    DEFAULT 'Y' COMMENT 'Y : 제안 가능 / N: 제안 불가', 
    `createDate`   TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`   TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`       VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE Items COMMENT '상품 판매글';

ALTER TABLE Items
    ADD CONSTRAINT FK_Items_category_Categoires_id FOREIGN KEY (category)
        REFERENCES Categoires (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE Items
    ADD CONSTRAINT FK_Items_location_Locations_id FOREIGN KEY (location)
        REFERENCES Locations (id) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- BadgeTypes Table Create SQL
CREATE TABLE BadgeTypes
(
    `id`          INT            NOT NULL    AUTO_INCREMENT COMMENT 'Badge Type ID', 
    `name`        VARCHAR(10)    NOT NULL    COMMENT 'Badge Name', 
    `content`     VARCHAR(50)    NOT NULL    COMMENT 'Badge Description', 
    `image`       BIGINT         NOT NULL    COMMENT 'Bade Image ID', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE BadgeTypes COMMENT '배지 종류';

CREATE UNIQUE INDEX UQ_BadgeTypes_1
    ON BadgeTypes(name);

ALTER TABLE BadgeTypes
    ADD CONSTRAINT FK_BadgeTypes_image_BadgeImages_id FOREIGN KEY (image)
        REFERENCES BadgeImages (id) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- Neighborhoods Table Create SQL
CREATE TABLE Neighborhoods
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'Neighborhood Post ID', 
    `user`        BIGINT         NOT NULL    COMMENT 'Created User Index', 
    `location`    BIGINT         NOT NULL    COMMENT 'Location ID', 
    `content`     TEXT           NOT NULL    COMMENT 'Post Content', 
    `topic`       TINYINT        NOT NULL    COMMENT 'Post Topic ID', 
    `expression`  TINYINT        NOT NULL    COMMENT 'Relate to Post ID', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE Neighborhoods COMMENT '동네 정보 글';

ALTER TABLE Neighborhoods
    ADD CONSTRAINT FK_Neighborhoods_location_Locations_id FOREIGN KEY (location)
        REFERENCES Locations (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE Neighborhoods
    ADD CONSTRAINT FK_Neighborhoods_topic_Topics_id FOREIGN KEY (topic)
        REFERENCES Topics (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE Neighborhoods
    ADD CONSTRAINT FK_Neighborhoods_expression_Expressions_id FOREIGN KEY (expression)
        REFERENCES Expressions (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE Neighborhoods
    ADD CONSTRAINT FK_Neighborhoods_user_Users_idx FOREIGN KEY (user)
        REFERENCES Users (idx) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- Keywords Table Create SQL
CREATE TABLE Keywords
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'Keyword ID', 
    `user`        BIGINT         NOT NULL    COMMENT 'User ID', 
    `word`        VARCHAR(30)    NOT NULL    COMMENT 'Keywords', 
    `item`        BIGINT         NOT NULL    COMMENT 'Item ID', 
    `catch`       CHAR(1)        NOT NULL    DEFAULT 'N' COMMENT 'N : Fail / Y : Success', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE Keywords COMMENT '키워드 알림';

ALTER TABLE Keywords
    ADD CONSTRAINT FK_Keywords_item_Items_id FOREIGN KEY (item)
        REFERENCES Items (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE Keywords
    ADD CONSTRAINT FK_Keywords_user_Users_idx FOREIGN KEY (user)
        REFERENCES Users (idx) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- Notices Table Create SQL
CREATE TABLE Notices
(
    `id`          BIGINT          NOT NULL    AUTO_INCREMENT COMMENT 'Notice ID', 
    `title`       VARCHAR(100)    NOT NULL    COMMENT 'Notice Title', 
    `content`     TEXT            NOT NULL    COMMENT 'Notice Content', 
    `createDate`  TIMESTAMP       NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP       NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)     NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE Notices COMMENT '공지사항';


-- UserManners Table Create SQL
CREATE TABLE UserManners
(
    `id`           BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'Manner Review ID', 
    `receiveUser`  BIGINT         NOT NULL    COMMENT 'Manner Received User', 
    `sendUser`     BIGINT         NOT NULL    COMMENT 'Manner Sent User', 
    `manner`       SMALLINT       NOT NULL    COMMENT 'Manner Type ID', 
    `createDate`   TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`   TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`       VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE UserManners COMMENT '사용자 매너 후기';

ALTER TABLE UserManners
    ADD CONSTRAINT FK_UserManners_manner_UserMannerTypes_id FOREIGN KEY (manner)
        REFERENCES UserMannerTypes (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE UserManners
    ADD CONSTRAINT FK_UserManners_receiveUser_Users_idx FOREIGN KEY (receiveUser)
        REFERENCES Users (idx) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE UserManners
    ADD CONSTRAINT FK_UserManners_sendUser_Users_idx FOREIGN KEY (sendUser)
        REFERENCES Users (idx) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- UserReviews Table Create SQL
CREATE TABLE UserReviews
(
    `id`           BIGINT          NOT NULL    AUTO_INCREMENT COMMENT 'Review ID', 
    `receiveUser`  BIGINT          NOT NULL    COMMENT 'Review Received User', 
    `sendUser`     BIGINT          NOT NULL    COMMENT 'Review Sent User', 
    `content`      VARCHAR(100)    NOT NULL    COMMENT 'Review Content', 
    `createDate`   TIMESTAMP       NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`   TIMESTAMP       NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`       VARCHAR(10)     NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE UserReviews COMMENT '사용자 거래 후기';

ALTER TABLE UserReviews
    ADD CONSTRAINT FK_UserReviews_receiveUser_Users_idx FOREIGN KEY (receiveUser)
        REFERENCES Users (idx) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE UserReviews
    ADD CONSTRAINT FK_UserReviews_sendUser_Users_idx FOREIGN KEY (sendUser)
        REFERENCES Users (idx) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- ItemPosts Table Create SQL
CREATE TABLE ItemPosts
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'Item Post ID', 
    `item`        BIGINT         NOT NULL    COMMENT 'Item ID', 
    `seller`      BIGINT         NOT NULL    COMMENT 'Seller User ID', 
    `buyer`       BIGINT         NOT NULL    COMMENT 'Buyer User ID', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN : still on sale or want to buy  / STOP : complete or cancel / DELETED : hide or delete', 
     PRIMARY KEY (id)
);

ALTER TABLE ItemPosts COMMENT '거래글에 대한 메타 정보';

ALTER TABLE ItemPosts
    ADD CONSTRAINT FK_ItemPosts_item_Items_id FOREIGN KEY (item)
        REFERENCES Items (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE ItemPosts
    ADD CONSTRAINT FK_ItemPosts_seller_Users_idx FOREIGN KEY (seller)
        REFERENCES Users (idx) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE ItemPosts
    ADD CONSTRAINT FK_ItemPosts_buyer_Users_idx FOREIGN KEY (buyer)
        REFERENCES Users (idx) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- Watchlists Table Create SQL
CREATE TABLE Watchlists
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'Watchlist ID', 
    `item`        BIGINT         NOT NULL    COMMENT 'Watchlist Item ID', 
    `buyer`       BIGINT         NOT NULL    COMMENT 'Buyer User ID', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE Watchlists COMMENT '관심 목록';

ALTER TABLE Watchlists
    ADD CONSTRAINT FK_Watchlists_item_Items_id FOREIGN KEY (item)
        REFERENCES Items (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE Watchlists
    ADD CONSTRAINT FK_Watchlists_buyer_Users_idx FOREIGN KEY (buyer)
        REFERENCES Users (idx) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- ItemImages Table Create SQL
CREATE TABLE ItemImages
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'Item Image ID', 
    `item`        BIGINT         NOT NULL    COMMENT 'Item ID', 
    `data`        TEXT           NULL        DEFAULT NULL COMMENT 'Item Image URL', 
    `titleImage`  CHAR(1)        NOT NULL    DEFAULT 'N' COMMENT 'N : 일반 사진 / Y : 대표 사진', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE ItemImages COMMENT '상품 사진';

ALTER TABLE ItemImages
    ADD CONSTRAINT FK_ItemImages_item_Items_id FOREIGN KEY (item)
        REFERENCES Items (id) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- Comments Table Create SQL
CREATE TABLE Comments
(
    `id`            BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'Comment ID', 
    `post`          BIGINT         NOT NULL    COMMENT 'Neighborhood Post ID', 
    `user`          BIGINT         NOT NULL    COMMENT 'Created User Index', 
    `content`       TEXT           NOT NULL    COMMENT 'Comment Content', 
    `thumbupCount`  SMALLINT       NOT NULL    DEFAULT 0 COMMENT 'Thumb up Count', 
    `createDate`    TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`    TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`        VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE Comments COMMENT '사용자 댓글';

ALTER TABLE Comments
    ADD CONSTRAINT FK_Comments_post_Neighborhoods_id FOREIGN KEY (post)
        REFERENCES Neighborhoods (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE Comments
    ADD CONSTRAINT FK_Comments_user_Users_idx FOREIGN KEY (user)
        REFERENCES Users (idx) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- NeighborhoodImages Table Create SQL
CREATE TABLE NeighborhoodImages
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'Post Image ID', 
    `post`        BIGINT         NOT NULL    COMMENT 'Neighborhood Post ID', 
    `data`        TEXT           NULL        DEFAULT NULL COMMENT 'Post Image URL', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE NeighborhoodImages COMMENT '동네 정보 글 사진';

ALTER TABLE NeighborhoodImages
    ADD CONSTRAINT FK_NeighborhoodImages_post_Neighborhoods_id FOREIGN KEY (post)
        REFERENCES Neighborhoods (id) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- Badges Table Create SQL
CREATE TABLE Badges
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT 'User Badge', 
    `user`        BIGINT         NOT NULL    COMMENT 'User Index', 
    `type`        INT            NOT NULL    COMMENT 'Badge Type', 
    `checkGold`   CHAR(1)        NOT NULL    DEFAULT 'N' COMMENT 'N : 일반 배지 / Y : 황금 배지', 
    `createDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP COMMENT 'Created Date', 
    `updateDate`  TIMESTAMP      NOT NULL    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated Date', 
    `status`      VARCHAR(10)    NOT NULL    DEFAULT 'RUN' COMMENT 'RUN(Normal) / STOP / DELETED', 
     PRIMARY KEY (id)
);

ALTER TABLE Badges COMMENT '사용자 배지 정보';

ALTER TABLE Badges
    ADD CONSTRAINT FK_Badges_type_BadgeTypes_id FOREIGN KEY (type)
        REFERENCES BadgeTypes (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE Badges
    ADD CONSTRAINT FK_Badges_user_Users_idx FOREIGN KEY (user)
        REFERENCES Users (idx) ON DELETE RESTRICT ON UPDATE RESTRICT;


